{"version":3,"sources":["store/actions.ts","store/store.ts","Components/Button/Button.tsx","Pages/StartGame/StartGame.tsx","utilits/getCurrentQuestion.ts","utilits/getScoreItemStatus.ts","Components/ScoreItem/ScoreItem.tsx","Components/GameScore/GameScore.tsx","Components/Answer/Answer.tsx","Components/AnswersGroup/AnswersGroup.tsx","Components/Loader/Loader.tsx","Pages/Game/Game.tsx","Pages/Result/Result.tsx","App.tsx","index.tsx"],"names":["ACTIONS","setQuestions","payload","type","restartGame","setFinished","initialState","questions","correctAnswers","finished","createStore","state","action","Button","title","onClick","className","data-test","StartGame","history","useHistory","dispatch","useDispatch","useSelector","src","alt","config","push","getCurrentQuestion","max","length","Math","floor","random","getScoreItemStatus","index","ScoreItem","children","width","height","viewBox","fill","xmlns","d","stroke","GameScore","prices","reverse","map","item","memo","Answer","letter","selected","status","AnswersGroup","currentQuestion","handleAnswer","useState","setSelected","setStatus","correctAnswer","find","id","answer","useEffect","setTimeout","includes","toUpperCase","handleAnswerClick","answers","Loader","color","Game","setCurrentQuestion","handleSuccess","newQuestions","findIndex","splice","question","success","htmlFor","Result","to","App","path","exact","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9725c39a.chunk.js","sourcesContent":["import { TQuestion } from \"../types/storeTypes\";\n\nexport const ACTIONS = {\n  SET_QUESTIONS: \"SET_QUESTIONS\",\n  SET_CORRECT_ANSWERS: \"SET_CORRECT_ANSWERS\",\n  RESTART_GAME: \"RESTART_GAME\",\n  SET_FINISHED: \"SET_FINISHED\",\n};\n\nexport const setQuestions = (payload:TQuestion[]) => ({ type: ACTIONS.SET_QUESTIONS, payload });\nexport const setCorrectAnswers = () => ({ type: ACTIONS.SET_CORRECT_ANSWERS });\nexport const restartGame = (payload:TQuestion[]) => ({ type: ACTIONS.RESTART_GAME, payload });\nexport const setFinished = (payload: boolean) => ({ type: ACTIONS.SET_FINISHED, payload });\n","import { createStore } from \"redux\";\nimport { TAction, TInitialState } from \"../types/storeTypes\";\nimport { ACTIONS } from \"./actions\";\n\nexport const initialState:TInitialState = {\n  questions: [],\n  correctAnswers: 0,\n  finished: false,\n};\n\nexport const reducer = (state:TInitialState = initialState, action:TAction) => {\n  switch (action.type) {\n    case ACTIONS.SET_QUESTIONS:\n      return { ...state, questions: action.payload };\n    case ACTIONS.SET_CORRECT_ANSWERS:\n      return { ...state, correctAnswers: state.correctAnswers + 1 };\n    case ACTIONS.RESTART_GAME:\n      return {\n        ...state, correctAnswers: 0, questions: action.payload, finished: false,\n      };\n    case ACTIONS.SET_FINISHED:\n      return { ...state, finished: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default createStore(reducer);\n","import React, { ReactElement } from \"react\";\nimport \"./Button.css\";\n\ninterface Props {\n  title: string\n  onClick: () => void\n}\n\nexport default function Button({ title, onClick }: Props): ReactElement {\n  return (\n    <button\n      type=\"button\"\n      className=\"mainButton\"\n      onClick={() => onClick()}\n      data-test={`${title}`}\n    >\n      { title }\n    </button>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport \"./StartGame.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport config from \"../../Config.json\";\n\n// components\nimport Button from \"../../Components/Button/Button\";\n\n// types\nimport { TInitialState } from \"../../types/storeTypes\";\nimport { restartGame } from \"../../store/actions\";\n\ntype TProps = {\n  title: string\n}\n\nexport default function StartGame({ title }:TProps): ReactElement {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const finished = useSelector((state:TInitialState) => state.finished);\n\n  const handleClick = () => {\n    if (finished) {\n      dispatch(restartGame(config.questions));\n    }\n    history.push(\"/game\");\n  };\n\n  return (\n    <section className=\"startGame\">\n      <div className=\"startGame_background\" />\n      <div className=\"startGame_main\">\n        <div className=\"startGame_logo\">\n          <img src=\"/images/startGame/hand.svg\" alt=\"hand\" />\n        </div>\n        <div className=\"startGame_control\">\n          <h1>{title}</h1>\n          <Button title=\"Start\" onClick={handleClick} />\n        </div>\n      </div>\n    </section>\n  );\n}\n","import { TQuestion } from \"../types/storeTypes\";\n\nconst getRandomPos = (max:number):number => Math.floor(Math.random() * (max - 0) + 0);\n\nexport default function getCurrentQuestion(questions: TQuestion[]):TQuestion {\n  // eslint-disable-next-line prefer-destructuring\n  const length = questions.length;\n  const randomPos = getRandomPos(length);\n  return questions[randomPos];\n}\n","export default function getScoreItemStatus(\n  index:number, correctAnswers:number, length:number,\n):string {\n  if (length - index - 1 === correctAnswers) {\n    return \"active\";\n  } if (length - index - 1 < correctAnswers) {\n    return \"earned\";\n  }\n\n  return \"\";\n}\n","import React, { ReactElement } from \"react\";\nimport \"./ScoreItem.css\";\nimport { useSelector } from \"react-redux\";\nimport { TInitialState } from \"../../types/storeTypes\";\nimport getScoreItemStatus from \"../../utilits/getScoreItemStatus\";\n\ntype TProps = {\n  children: string\n  index: number\n  length: number\n}\n\nexport default function ScoreItem({ children, index, length }:TProps): ReactElement {\n  const correctAnswers = useSelector((state:TInitialState) => state.correctAnswers);\n\n  return (\n    <div\n      data-test=\"main-container\"\n      className={`scoreItem ${getScoreItemStatus(index, correctAnswers, length)}`}\n    >\n      <svg width=\"240\" height=\"40\" viewBox=\"0 0 240 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" data-test=\"svgImage\">\n        <path d=\"M13.4526 4.63788C15.6376 2.01596 18.8742 0.5 22.2872 0.5H217.713C221.126 0.5 224.362 2.01597 226.547 4.63788L239.349 20L226.547 35.3621C224.362 37.984 221.126 39.5 217.713 39.5H22.2872C18.8742 39.5 15.6376 37.984 13.4526 35.3621L0.650853 20L13.4526 4.63788Z\" fill=\"white\" stroke=\"#D0D0D8\" />\n      </svg>\n      <span data-test={`${children}`}>{`${children}`}</span>\n    </div>\n  );\n}\n","import React, { memo, ReactElement } from \"react\";\nimport config from \"../../Config.json\";\n\n// components\nimport ScoreItem from \"../ScoreItem/ScoreItem\";\n\nfunction GameScore(): ReactElement {\n  const prices = [...config.prices].reverse();\n  return (\n    <div className=\"game_score\">\n      {\n        prices.map((item, index) => (\n          <ScoreItem\n            key={item}\n            index={index}\n            length={prices.length}\n          >\n            {item}\n          </ScoreItem>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default memo(GameScore);\n","/* eslint-disable no-unused-vars */\nimport React, { ReactElement } from \"react\";\nimport \"./Answer.css\";\n\ninterface Props {\n  children: string\n  letter: string\n  onClick: (id:string) => void\n  selected: string | null\n  status: string\n}\n\nexport default function Answer({\n  children, letter, onClick, selected, status,\n}: Props): ReactElement {\n  const handleClick = () => {\n    if (selected) return;\n    onClick(letter);\n  };\n\n  return (\n    <button\n      type=\"button\"\n      className={`answer ${status}`}\n      onClick={handleClick}\n      data-test={`${status}`}\n    >\n      <svg width=\"420\" height=\"76\" viewBox=\"0 0 405 72\" data-test=\"borderSvg\">\n        <path d=\"M38.7172 5.28344C40.8781 2.28016 44.3521 0.5 48.052 0.5H356.948C360.648 0.5 364.122 2.28016 366.283 5.28344L388.384 36L366.283 66.7166C364.122 69.7198 360.648 71.5 356.948 71.5H48.052C44.3521 71.5 40.8781 69.7198 38.7172 66.7166L16.616 36L38.7172 5.28344Z\" fill=\"white\" />\n      </svg>\n      <p className=\"answer_info\" data-test={`${children}`}>\n        <span className=\"answer_letter\" data-test={`${letter}`}>{letter}</span>\n        {children}\n      </p>\n    </button>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, {\n  memo, ReactElement, useEffect, useState,\n} from \"react\";\nimport { TQuestion } from \"../../types/storeTypes\";\nimport Answer from \"../Answer/Answer\";\nimport config from \"../../Config.json\";\n\ninterface Props {\n  currentQuestion: TQuestion | null\n  handleAnswer: (success:boolean) => void\n}\n\nfunction AnswersGroup({ currentQuestion, handleAnswer }: Props): ReactElement {\n  const [selected, setSelected] = useState<string | null>(null);\n  const [status, setStatus] = useState<string>(\"\");\n  const correctAnswer = config.correctAnswers\n    .find((item) => item.id === currentQuestion?.id)?.answer;\n\n  useEffect(() => {\n    if (!selected) return;\n\n    if (status === \"selected\") {\n      setTimeout(() => {\n        if (correctAnswer?.includes(selected.toUpperCase())) {\n          setStatus(\"correct\");\n        } else {\n          setStatus(\"wrong\");\n        }\n      }, 1000);\n    }\n\n    if (status === \"correct\" || status === \"wrong\") {\n      setTimeout(() => {\n        setSelected(null);\n        setStatus(\"\");\n        handleAnswer(status === \"correct\");\n      }, 1000);\n    }\n  }, [selected, status, correctAnswer, handleAnswer]);\n\n  const handleAnswerClick = (letter:string):void => {\n    setSelected(letter);\n    setStatus(\"selected\");\n  };\n\n  return (\n    <div className=\"game_answers\" data-test=\"group-container\">\n      {\n        currentQuestion && currentQuestion.answers.map((item) => (\n          <Answer\n            key={item.id}\n            letter={item.letter}\n            onClick={handleAnswerClick}\n            selected={selected}\n            status={selected === item.letter ? status : \"\"}\n          >\n            {item.answer}\n          </Answer>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default memo(AnswersGroup);\n","import React, { ReactElement } from \"react\";\nimport \"./Loader.css\";\nimport LoaderX from \"react-loader-spinner\";\n\nexport default function Loader(): ReactElement {\n  return (\n    <div className=\"loader_container\">\n      <LoaderX\n        type=\"Grid\"\n        color=\"#FF8B37\"\n        height={70}\n        width={70}\n      />\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { ReactElement, useEffect, useState } from \"react\";\nimport \"./Game.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport getCurrentQuestion from \"../../utilits/getCurrentQuestion\";\nimport { setCorrectAnswers, setFinished, setQuestions } from \"../../store/actions\";\nimport config from \"../../Config.json\";\n\n// types\nimport { TInitialState, TQuestion } from \"../../types/storeTypes\";\n\n// components\nimport GameScore from \"../../Components/GameScore/GameScore\";\nimport StartGame from \"../StartGame/StartGame\";\nimport AnswersGroup from \"../../Components/AnswersGroup/AnswersGroup\";\nimport Loader from \"../../Components/Loader/Loader\";\n\nexport default function Game(): ReactElement {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // redux\n  const questions = useSelector((state:TInitialState) => state.questions);\n  const finished = useSelector((state:TInitialState) => state.finished);\n  const correctAnswers = useSelector((state:TInitialState) => state.correctAnswers);\n\n  // state\n  const [currentQuestion, setCurrentQuestion] = useState<TQuestion | null>(null);\n\n  useEffect(() => {\n    setCurrentQuestion(getCurrentQuestion(questions));\n  }, [questions]);\n\n  const handleSuccess = () => {\n    // remove past question from all questions arr\n    const newQuestions = [...questions];\n    const index = newQuestions.findIndex((item) => item.id === currentQuestion?.id);\n    newQuestions.splice(index, 1);\n    dispatch(setCorrectAnswers());\n\n    // check if last question\n    if (correctAnswers === config.prices.length - 1) {\n      history.push(\"/result\");\n      dispatch(setFinished(true));\n    } else {\n      dispatch(setQuestions(newQuestions));\n    }\n  };\n\n  const handleFailed = () => {\n    history.push(\"/result\");\n    dispatch(setFinished(true));\n  };\n\n  const handleAnswer = (success:boolean) => {\n    if (success) {\n      handleSuccess();\n    } else {\n      handleFailed();\n    }\n  };\n\n  if (finished) {\n    return (\n      <StartGame title=\"The previous game was over\" />\n    );\n  }\n\n  if (!currentQuestion) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <section className=\"game\">\n      <div className=\"game_playGround\">\n        <h1 className=\"game_question\">{currentQuestion.question}</h1>\n        <AnswersGroup\n          currentQuestion={currentQuestion}\n          handleAnswer={handleAnswer}\n        />\n      </div>\n      <div className=\"game_menu\">\n        <input type=\"checkbox\" id=\"toggle_menu\" />\n        <label className=\"game_menuToggle\" htmlFor=\"toggle_menu\">\n          <span />\n        </label>\n        <GameScore />\n      </div>\n    </section>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport \"./Result.css\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Button from \"../../Components/Button/Button\";\nimport { TInitialState } from \"../../types/storeTypes\";\nimport config from \"../../Config.json\";\nimport { restartGame } from \"../../store/actions\";\n\nexport default function Result(): ReactElement {\n  const correctAnswers = useSelector((state:TInitialState) => state.correctAnswers);\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(restartGame(config.questions));\n  };\n\n  return (\n    <section className=\"result\">\n      <div className=\"result_main\">\n        <div className=\"result_logo\">\n          <img src=\"/images/startGame/hand.svg\" alt=\"hand\" />\n        </div>\n        <div className=\"result_control\">\n          <div className=\"result_earned\">\n            <span className=\"result_info\">Total score:</span>\n            <span className=\"result_money\">\n              {correctAnswers === 0 ? \"$0 \" : `${config.prices[correctAnswers - 1]} `}\n              earned\n            </span>\n          </div>\n          <Link to=\"/game\">\n            <Button title=\"Try again\" onClick={handleClick} />\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { setQuestions } from \"./store/actions\";\nimport config from \"./Config.json\";\n\n// components\nimport StartGame from \"./Pages/StartGame/StartGame\";\nimport Game from \"./Pages/Game/Game\";\nimport Result from \"./Pages/Result/Result\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setQuestions(config.questions));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\" exact>\n          <StartGame title=\"Who wants to be a millionaire?\" />\n        </Route>\n        <Route path=\"/game\" exact>\n          <Game />\n        </Route>\n        <Route path=\"/result\" exact>\n          <Result />\n        </Route>\n      </Switch>\n    </div>\n  );\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}